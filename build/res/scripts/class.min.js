(()=>{const toggles=document.querySelectorAll(".toggle"),toggleHeader=document.querySelectorAll(".toggle-head",toggles),toggleBodies=document.querySelectorAll(".toggle-body",toggles),toggleFooter=document.querySelectorAll(".toggle-foot",toggles),activeClass="open",Toggler=class Toggle{constructor(element){this.element=element,this.getHeight=this.getHeight.bind(this),this.toggle=this.toggle.bind(this),window.addEventListener("resize",this.getHeight)}getHeight(){const clone=this.element.cloneNode(!0);return clone.setAttribute("style","visibility: hidden; display: block; margin: -999px 0"),this.height=this.element.parentNode.appendChild(clone).clientHeight,this.paddingTop=parseInt(getComputedStyle(clone).paddingTop,10),this.paddingBottom=parseInt(getComputedStyle(clone).paddingBottom,10),this.element.parentNode.removeChild(clone),this.height}toggle(){this.getHeight();const currentHeight=this.element.clientHeight,time=this.height/3+150,[start,end]=currentHeight>this.height/2?[this.height,0]:[0,this.height],difference=end-start;this.element.parentNode.classList[0===end?"remove":"add"]("open"),this.element.setAttribute("style","overflow: hidden; display: block; padding-top: 0; padding-bottom: 0;");const initTime=(new Date).getTime(),repeat=()=>{const newTime=(new Date).getTime()-initTime,step=start+difference*newTime/time,stepPaddingT=0===start?0+this.paddingTop*newTime/time:this.paddingTop+-this.paddingTop*newTime/time,stepPaddingB=0===start?0+this.paddingBottom*newTime/time:this.paddingBottom+-this.paddingBottom*newTime/time;newTime<=time?this.element.setAttribute("style",`overflow: hidden; display: block; padding-top: ${stepPaddingT}px; padding-bottom: ${stepPaddingB}px; height: ${step}px`):this.element.setAttribute("style",`display: ${0===end?"none":"block"}`);const repeatLoop=requestAnimationFrame(repeat);(start<=end?Math.floor(step)>end:Math.floor(step)<end)&&cancelAnimationFrame(repeatLoop)};repeat()}};toggleBodies.forEach(toggleBody=>{const element=toggleBody;element.isToggle=new Toggler(toggleBody)}),toggleHeader.forEach(toggleHead=>{toggleHead.addEventListener("click",()=>{toggleHead.parentNode.querySelector(".toggle-body").isToggle.toggle()})}),toggleFooter.forEach(toggleFoot=>{toggleFoot.addEventListener("click",()=>{toggleFoot.parentNode.isToggle.toggle()})})}).call(this);
//# sourceMappingURL=class.min.js.map